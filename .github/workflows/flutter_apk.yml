name: Flutter Build

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
    - main
    
# on: push    # Default will running for every branch.
    
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: echo ${{ github.ref }}
      - run: flutter pub get
      - run: flutter analyze .
      - run: flutter test

  buildWeb:
    name: Build Web
    needs: [test]
    env:
      my_secret: ${{secrets.commit_secret}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter pub get
      - run: flutter test
      - run: flutter build web --release
      - run: |
          cd build/web
          git init
          git config --global user.email hossain0338@gmail.com
          git config --global user.name shhossain
          git status
          git remote add origin https://${{secrets.commit_secret}}@github.com/shhossain/billsapp.git
          git checkout -b gh-pages
          git add --all
          git commit -m "${{ github.event.head_commit.message }}"
          git push origin gh-pages -f

  buildApk:
    name: Build Apk
    needs: [test]
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '17'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get
    # - run: flutter pub run flutter_launcher_icons:main
    
    # # Check for any formatting issues in the code.
    # - run: flutter format --set-exit-if-changed .
    
    # Build apk.
    - run: flutter build apk
    
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v1
      with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk
    
    - run: tag="1.2.1"
    - run: |
        git init
        git config --global user.email hossain0338@gmail.com
        git config --global user.name shhossain
        git status
        git remote add origin https://${{ secrets.commit_secret }}@github.com/shhossain/electricbillsfullapp.git
        git tag -a v$tag -m "version $tag"
        git push origin --tags
    - name: version
      run: echo "$tag"
      id: version
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: flase
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: "v$tag"
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.commit_secret }}

    - name: upload apk
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/apk/release/app-release.apk
        asset_name: mybill.apk
        asset_content_type: application/vnd.android.package-archive


  
  